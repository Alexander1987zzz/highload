services:
  pgmaster:
    image: 'postgres:16.4'
    container_name: pgmaster
    hostname: pgmaster
    environment:
      - POSTGRES_DB=socialnetwork
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    command: [
      "postgres",
      "-c",
      "config_file=/etc/postgresql/postgresql.conf",
      "-c",
      "hba_file=/etc/postgresql/pg_hba.conf"
    ]
    volumes:
      - ./master_postgresql.conf:/etc/postgresql/postgresql.conf
      - ./master_pg_hba.conf:/etc/postgresql/pg_hba.conf
      - ./postgres_data_master:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - '5431:5432'
    networks:
      postgres:
        ipv4_address: 172.21.0.2
  pgslave:
    image: 'postgres:16.4'
    container_name: pgslave
    hostname: pgslave
    environment:
      - POSTGRES_DB=socialnetwork
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    command: [
      "postgres",
      "-c",
      "config_file=/etc/postgresql/postgresql.conf",
      "-c",
      "hba_file=/etc/postgresql/pg_hba.conf"
    ]
    volumes:
      - ./slave_postgresql.conf:/etc/postgresql/postgresql.conf
      - ./slave_pg_hba.conf:/etc/postgresql/pg_hba.conf
      - ./postgres_data_slave:/var/lib/postgresql/data
      - ./postgres_backup:/backup
    ports:
      - '5433:5432'
    networks:
      postgres:
        ipv4_address: 172.21.0.3

  pgslave2:
    image: 'postgres:16.4'
    container_name: pgslave2
    hostname: pgslave2
    environment:
      - POSTGRES_DB=socialnetwork
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    command: [
      "postgres",
      "-c",
      "config_file=/etc/postgresql/postgresql.conf",
      "-c",
      "hba_file=/etc/postgresql/pg_hba.conf"
    ]
    volumes:
      - ./slave2_postgresql.conf:/etc/postgresql/postgresql.conf
      - ./slave2_pg_hba.conf:/etc/postgresql/pg_hba.conf
      - ./postgres_data_slave2:/var/lib/postgresql/data
      - ./postgres_backup:/backup
    ports:
      - '5434:5432'
    networks:
      postgres:
        ipv4_address: 172.21.0.4
  haproxy:
    image: haproxy:latest
    container_name: haproxy
    ports:
      - '5430:5430'
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    networks:
      postgres:
        ipv4_address: 172.21.0.5

  redis:
    image: redis:6.0
    ports:
      - "6379:6379"
    environment:
      - REDIS_USER=user
      - REDIS_PASSWORD=password

  rabbitmq:
    image: rabbitmq:management
    ports:
      - "5672:5672"   # RabbitMQ
      - "15672:15672"
      - "61613:61613"# RabbitMQ Management Console
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./alert_rules.yml:/etc/prometheus/alert_rules.yml
      - ./data/prometheus:/prometheus
    ports:
      - "9090:9090"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"

  alertmanager:
    image: prom/alertmanager:latest
    volumes:
      - ./config.yml:/etc/alertmanager/config.yml
    ports:
      - "9093:9093"

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
    volumes:
      - ./provisioning:/etc/grafana/provisioning
      - ./dashboards:/etc/grafana/dashboards
      - ./data/grafana:/var/lib/grafana
    ports:
      - "3000:3000"

networks:
  postgres:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16
          gateway: 172.21.0.1